Minimum viable feature: I want an interactive base diagram where I can enter
anything I'd usually put into a box on the score card. I couldn't think of a
good thing to call the box itself in the code, so I settled on PlateAppearance
(though it's really the plate-appearance plus baserunning).

When I click on a base line, I should get a list of options for what gets
recorded there. This could be a modal dialog, but on mobile I'm really liking
the idea of a gesture-based interface. (Perhaps a mode that's specific to
entering the current inning, and a separate mode for viewing the whole card).

Click 1st-base line
* Hit/walk/error/HBP: fill line to first
* Out: select defenders from a diagram, or use keyboard


Need to rethink design for passing data from the 'type of thing' dialog to the
fielder selection dialog.


Diagram now handles rendering. PlateAppearance has a position in between Inning
(which should own the data) and Diagram (which just renders what it's told to
render).

PlayFragment should be a structure that encapsulates what happens between a
player coming up to bat and scoring or making an out. PlateAppearance then
translates a list of PlayFragments into the Diagram properties, and Inning
maintains a list of PlayFragments grouped together (to link different players
within the same play).

Play = { player: _, fragment: PlayFragment }[]
PlateAppearance = { player: _,  plays: PlayFragment[] }


Need to figure out how to advance runners. Force plays are obvious, but we can't
know if a runner on second will score on a single, e.g. Need to provide some
form of input.

Need to cue the user on inputs that currently require attention. Green baseline?


Current data model is a flat list of IndexedPlayFragments. New data model is a
list of Plays, each Play containing its fragments.
